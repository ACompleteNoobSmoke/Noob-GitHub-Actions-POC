name: Forked Build Pipeline

run-name: 'Forked Build Pipeline For ${{github.head_ref}}'

on:
    pull_request:

env:
  FORKED_REPO: ${{github.actor}}/Noob-GitHub-Actions-POC
  HEAD_REF_BRANCH: ${{github.head_ref}}
  IS_SNAPSHOT_VERSION: "false"
  TRUNK_BRANCH: 'main'


jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    outputs:
      pomVersion: ${{steps.get_current_version.outputs.POM_VERSION}}
      isSnapshot: ${{env.IS_SNAPSHOT_VERSION}}
      branchName: ${{env.HEAD_REF_BRANCH}}
      repoName: ${{env.FORKED_REPO}}
    steps:
          - name: Checkout Code Repository
            uses: actions/checkout@v4
          - name: Downloading Java
            uses: actions/setup-java@v4
            with:
                java-version: '21'
                distribution: 'adopt'
          - name: Maven Build
            if: github.ref == 'refs/heads/main'
            run: |
              echo 'Running in main branch' 
              mvn clean install
          - name: Maven Build -- Feature Branch
            if: github.ref != 'refs/heads/main'
            run: |
              echo 'Running in ${{github.ref_name}} branch'
              mvn clean install
          - name: Get Current Version
            id: get_current_version
            run: |
              echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
          - name: Is Snapshot Version
            id: get_snapshot_version
            if: contains(${{env.POM_VERSION}}, '-SNAPSHOT')
            run: echo "IS_SNAPSHOT_VERSION=true" >> $GITHUB_ENV
          

  # publih-to-artifact-repositories:
  #       name: Publish Artifacts WF
  #       needs: build-job
  #       permissions: write-all
  #       uses: BasedNoobDevelopers/Noob-GitHub-Actions-POC/.github/workflows/publish_workflow.yaml@main
  #       with:
  #         is_snapshot_version: ${{needs.build-job.outputs.isSnapshot}}
  #         version_name: ${{needs.build-job.outputs.pomVersion}}
  #         repository_name: ${{needs.build-job.outputs.repoName}}
  #         branch_name: ${{needs.build-job.outputs.branchName}}
