name: Reusable Release Pipeline

run-name: "Releasing ${{ github.event.repository.name }} #${{github.run_number}}"

on:
    workflow_call:
      inputs:
        release_version:
          type: string
          required: true
        snapshot_version:
           type: string
           required: true

jobs:
    set_build_and_tag_release:
        runs-on: ubuntu-latest
        permissions:
          contents: write
        steps:
            - name: Print Versions
              run: |
                echo "Next Dev Version: ${{github.event.inputs.snapshot_version}}"
                echo "Next Release Version: ${{github.event.inputs.release_version}}"
            - name: Checkout Code Repository
              uses: actions/checkout@v4
            - name: Downloading Java
              uses: actions/setup-java@v4
              with:
                java-version: '21'
                distribution: 'temurin'
            - name: Set Release Version
              run: mvn -B versions:set -DnewVersion=${{github.event.inputs.release_version}} -DgenerateBackupPoms=false
            - name: Build Release Version
              run: mvn -version mvn clean install
            - name: Create tag
              uses: actions/github-script@v5
              with:
                script: |
                  github.rest.git.createRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: 'refs/tags/${{github.event.inputs.release_version}}',
                    sha: context.sha
                  })
            
    set_next_dev:
          runs-on: ubuntu-latest
          needs: 
            - set_build_and_tag_release
          permissions:
            contents: write
          steps:
            - name: Checkout Code Repository
              uses: actions/checkout@v4
            - name: Downloading Java
              uses: actions/setup-java@v4
              with:
                java-version: '21'
                distribution: 'temurin'
            - name: Set Dev Version
              run: mvn -B versions:set -DnewVersion=${{github.event.inputs.snapshot_version}}-SNAPSHOT -DgenerateBackupPoms=false
            - name: Commit & Push
              run: |
                git add .
                git config user.name fda_shield_omoruyi
                git config user.email oomofonmwan93@gmail.com
                git commit -m 'Set next dev version to ${{github.event.inputs.snapshot_version}}-SNAPSHOT'
                git push origin HEAD:main
                git push --tags origin 

    create_release:
      name: Create Release
      permissions: write-all
      needs: 
        - set_build_and_tag_release
        - set_next_dev
      runs-on: ubuntu-latest
      steps:
            - name: Checkout code
              uses: actions/checkout@master
            - name: Create Release
              id: create_release
              uses: actions/create-release@latest
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                tag_name: ${{github.event.inputs.release_version}}
                release_name: Release ${{github.event.inputs.release_version}}
                body: |
                  Release  ${{github.event.inputs.release_version}}
                draft: false
                prerelease: false